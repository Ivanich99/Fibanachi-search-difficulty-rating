#Первый — с помощью алгоритма «Решето Эратосфена».
import cProfile

n = 100  # n- колличество значений, чтоб не использовать input


def Fib_search():
    a = []
    for i in range(n + 1):
        a.append(i)

    # Вторым элементом является единица,
    # которую не считают простым числом
    # забиваем ее нулем.
    a[1] = 0

    # начинаем с 3-го элемента
    i = 2
    while i <= n:
        # Если значение ячейки до этого не было обнулено,
        # в этой ячейке содержится простое число.
        if a[i] != 0:
            # первое кратное ему будет в два раза больше
            j = i + i
            while j <= n:
                # это число составное, поэтому заменяем его нулем
                a[j] = 0
                # переходим к следующему числу, которое кратно i (оно на i больше)
                j = j + i
        i += 1

    a = set(a)

    a.remove(0)


cProfile.run(Fib_search())
#Второй файл находится в HW1.1.
#В обоих случаях скорость выполнения приблизительно одинаковая, а сложность, в данном случае O(sqrt (n))
#А без использования "Решета" сложность, по моему мнению O(n*log n)
